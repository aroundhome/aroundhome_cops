AllCops:
  Exclude:
    - 'bin/**/*'
    - 'db/schema.rb'
    - 'doc/**/*'
    - 'docker_app/**/*'
    - 'Guardfile'
    - 'tmp/**/*'
    - 'vendor/**/*'
    - 'db/migrate/200*.rb'
    - 'db/migrate/2010*.rb'
    - 'db/migrate/2011*.rb'
    - 'db/migrate/2012*.rb'
    - 'db/migrate/2013*.rb'
    - 'db/migrate/2014*.rb'
    - 'db/migrate/2015*.rb'
    - 'db/migrate/2016*.rb'
    - 'db/migrate/2017*.rb'

# Models can have a bunch of attributes which lead to long methods and high
# complexity values. However, these methods are still very readable because they
# usually have a lot of repetition.
Metrics:
  Exclude:
    - 'db/migrate/*.rb'


# We need to configure exemptions for blocks that we generally accept to be
# long, since they are less comparable to methods and more comparable to
# modules/classes.
Metrics/BlockLength:
  ExcludedMethods:
    - context
    - describe
    - namespace
    - factory
    - define
    - shared_examples_for
    - shared_examples
    - xcontext
    - xdescribe
  Exclude:
    - 'config/environments/*.rb' # instead of excluding all :configure methods
    - 'config/routes.rb'
    - 'spec/spec_helper.rb' # instead of excluding all :configure methods
    - '*.gemspec' # a gemspec could easily have more than the 25 lines limit

# Increase from rubocops default limit of 10 lines.
# The idea of increasing the default limit is to reduce the "false alarm rate"
# of this cop on projects without a rubocop_todo.yml.
# The intention of the cop is to fight complicated methods, but it often triggers
# for (subjectively) easy methods, too.
Metrics/MethodLength:
  Max: 16

Style/AsciiComments:
  Enabled: false

Style/Documentation:
  Enabled: false

# Encoding comments are not neccessary in all 2.x versions of ruby, since
# UTF-8 has become the default encoding.
Style/Encoding:
  Enabled: true
  Exclude:
    - '*.gemspec'

# Ruby 2.3 introduced optional automatic freezing of string literals
# This might become default in future versions.
# For details on this feature see the internet, e.g. https://wyeworks.com/blog/2015/12/1/immutable-strings-in-ruby-2-dot-3
Style/FrozenStringLiteralComment:
  EnforcedStyle: always

# This cop tries to make you use module_funtion instead of extend self
# This is bad because both have their own use-case and should not be used
# and sometimes cannot be used to do the same thing
Style/ModuleFunction:
  Enabled: false

# While it is very often useful to separate numbers after every three digits
# for readability, this mostly doesn't make sense if the number doesn't
# represent an amount but rather an identifier. Thus the use of underscores
# every three digits is recommended but not enforced.
Style/NumericLiterals:
  Enabled: false

# Do not force the same one letter variable names for all occurences of inject
Style/SingleLineBlockParams:
  Enabled: false

# Rubocop 0.52.0 added new 'unannotated' style, which mistakenly treat
# date/time formatting strings as regular formatting strings
# Disable is temporary until the fix is released.
# To check if the bug was fixed, make sure this code is okay for Rubocop:
# Time.strptime('2017-12-13', '%Y-%m-%d')
Style/FormatStringToken:
  Enabled: false

# No significant improvement in speed or memory usage apparent. Readability is
# atrocious.
Performance/Casecmp:
  Enabled: false

# Not safe in a rails context, since Relation.count is != Enumerable.count
Performance/Count:
  Enabled: false

# Does not make sense when dealing with non-ActiveRecord like mongoid. That
# Mongoid for example throws error if find_by returns nothing (but we expect
# nil)
Rails/FindBy:
  Enabled: false
